@model List<TestIdentityApp.Data.Models.Ödev>
@{
    Layout = "_Layout";
}

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    <title>Ödevler | Ludiflex</title>
    <style>
        * {
            box-sizing: border-box;
        }

        body {
            background-color: rgba(245, 242, 235, 255);
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: flex-start;
            min-height: 100vh;
            padding: 20px; /* Padding for mobile responsiveness */
        }

        /* Main container for all content */
        .contain {
            display: flex;
            flex-direction: column;
            align-items: center;
            width: 100%;
            max-width: 1200px;
            padding: 20px;
        }

        /* Card styling */
        .hikaye-card {
            border: 2px solid #2980b9;
            border-radius: 10px;
            background-color: #ffffff;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
            padding: 20px;
            width: 100%; /* Full width for responsiveness */
            max-width: 1000px; /* Limit width on larger screens */
        }

        /* Buttons and layout for the buttons */
        .btn {
            padding: 10px;
            font-size: 1.2rem;
            border-radius: 5px;
            text-decoration: none;
            width: 150px; /* Same width for buttons */
            text-align: center;
            transition: background-color 0.3s ease;
        }

        .button-container {
            display: flex;
            gap: 10px;
        }

        /* Card title */
        .card-title {
            color: #2c3e50;
            font-size: 1.8rem;
            margin-bottom: 15px;
        }

        /* Card text */
        .card-text {
            color: #34495e;
            font-size: 1.2rem;
            margin-bottom: 20px;
        }

        /* Primary button styling */
        .btn-primary {
            background-color: #2980b9;
            color: #fff;
            border: none;
            cursor: pointer;
        }

        .btn-primary:hover {
            background-color: #3498db;
        }

        /* Page title */
        h2.text-primary {
            color: #2c3e50;
            font-size: 2.5rem;
            margin-bottom: 30px;
            text-align: center;
        }

        /* Full-width container for smaller screens */
        .row {
            width: 100%;
        }

        .col-12 {
            width: 100%;
        }

        form {
            display: inline;
        }

        /* Form button */
        button {
            background-color: #e74c3c;
            color: white;
            border: none;
            padding: 10px 20px;
            font-size: 1.2rem;
            border-radius: 5px;
            cursor: pointer;
        }

        button:hover {
            background-color: #c0392b;
        }
    </style>
</head>
<body>
<div class="contain">
    <div class="row">
        <div class="col-12">
            <h2 class="text-primary">Ödevler</h2>
        </div>
    </div>

    @foreach (var obj in Model)
    {
    <div class="hikaye-card">
        <div class="card-body">
            <h5 class="card-title">@obj.Başlık</h5>
            <p class="card-text">
                <strong>İçerik:</strong> @obj.İçerik <br />
                <strong>Tarih:</strong> @((obj.Tarih.HasValue) ? obj.Tarih.Value.ToString("yyyy-MM-dd") : "Tarih yok")

                @if (!string.IsNullOrEmpty(obj.HomeworkFilePath))
                {
                    var files = obj.HomeworkFilePath.Split(',');
                    foreach (var file in files)
                    {
                        <strong>Dosya:</strong>
                        <a href="@Url.Content(file)" target="_blank">Dosyayı İndir</a><br />
                    }
                }

            </p>
            
            @if (User.IsInRole("Öğretmen"))
            {
            <div class="button-container">
                <a href="@Url.Action("Edit", "Ödev", new { area = "Öğretmen", id = obj.Id })" class="btn btn-primary">Düzenle</a>
                <form action="/Öğretmen/Ödev/Delete/@obj.Id" method="post">
                    <input name="__RequestVerificationToken" type="hidden" value="...anti-forgery-token-value...">
                    <button type="submit" class="btn">Sil</button>
                </form>
            </div>
            }
        </div>
    </div>
    }
</div>
</body>
